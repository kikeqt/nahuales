__version__ = "$Version: 0.0.1"

from unittest import TestCase

from .binary_string_2_bytes import Binary_string_2_bytes


class Binary_string_2_bytes_Test(TestCase):
    def setUp(self):
        self.test_object = Binary_string_2_bytes()

    def test_binary_string_2_bytes(self):
        test_values = (
            ('00000000', b'\x00'),
            ('00000001', b'\x01'),
            ('00000010', b'\x02'),
            ('00000011', b'\x03'),
            ('00000100', b'\x04'),
            ('00000101', b'\x05'),
            ('00000110', b'\x06'),
            ('00000111', b'\x07'),
            ('00001000', b'\x08'),
            ('00001001', b'\t'),
            ('00001010', b'\n'),
            ('00001011', b'\x0b'),
            ('00001100', b'\x0c'),
            ('00001101', b'\r'),
            ('00001110', b'\x0e'),
            ('00001111', b'\x0f'),
            ('00010000', b'\x10'),
            ('00010001', b'\x11'),
            ('00010010', b'\x12'),
            ('00010011', b'\x13'),
            ('00010100', b'\x14'),
            ('00010101', b'\x15'),
            ('00010110', b'\x16'),
            ('00010111', b'\x17'),
            ('00011000', b'\x18'),
            ('00011001', b'\x19'),
            ('00011010', b'\x1a'),
            ('00011011', b'\x1b'),
            ('00011100', b'\x1c'),
            ('00011101', b'\x1d'),
            ('00011110', b'\x1e'),
            ('00011111', b'\x1f'),
            ('00100000', b' '),
            ('00100001', b'!'),
            ('00100010', b'"'),
            ('00100011', b'#'),
            ('00100100', b'$'),
            ('00100101', b'%'),
            ('00100110', b'&'),
            ('00100111', b"'"),
            ('00101000', b'('),
            ('00101001', b')'),
            ('00101010', b'*'),
            ('00101011', b'+'),
            ('00101100', b','),
            ('00101101', b'-'),
            ('00101110', b'.'),
            ('00101111', b'/'),
            ('00110000', b'0'),
            ('00110001', b'1'),
            ('00110010', b'2'),
            ('00110011', b'3'),
            ('00110100', b'4'),
            ('00110101', b'5'),
            ('00110110', b'6'),
            ('00110111', b'7'),
            ('00111000', b'8'),
            ('00111001', b'9'),
            ('00111010', b':'),
            ('00111011', b';'),
            ('00111100', b'<'),
            ('00111101', b'='),
            ('00111110', b'>'),
            ('00111111', b'?'),
            ('01000000', b'@'),
            ('01000001', b'A'),
            ('01000010', b'B'),
            ('01000011', b'C'),
            ('01000100', b'D'),
            ('01000101', b'E'),
            ('01000110', b'F'),
            ('01000111', b'G'),
            ('01001000', b'H'),
            ('01001001', b'I'),
            ('01001010', b'J'),
            ('01001011', b'K'),
            ('01001100', b'L'),
            ('01001101', b'M'),
            ('01001110', b'N'),
            ('01001111', b'O'),
            ('01010000', b'P'),
            ('01010001', b'Q'),
            ('01010010', b'R'),
            ('01010011', b'S'),
            ('01010100', b'T'),
            ('01010101', b'U'),
            ('01010110', b'V'),
            ('01010111', b'W'),
            ('01011000', b'X'),
            ('01011001', b'Y'),
            ('01011010', b'Z'),
            ('01011011', b'['),
            ('01011100', b'\\'),
            ('01011101', b']'),
            ('01011110', b'^'),
            ('01011111', b'_'),
            ('01100000', b'`'),
            ('01100001', b'a'),
            ('01100010', b'b'),
            ('01100011', b'c'),
            ('01100100', b'd'),
            ('01100101', b'e'),
            ('01100110', b'f'),
            ('01100111', b'g'),
            ('01101000', b'h'),
            ('01101001', b'i'),
            ('01101010', b'j'),
            ('01101011', b'k'),
            ('01101100', b'l'),
            ('01101101', b'm'),
            ('01101110', b'n'),
            ('01101111', b'o'),
            ('01110000', b'p'),
            ('01110001', b'q'),
            ('01110010', b'r'),
            ('01110011', b's'),
            ('01110100', b't'),
            ('01110101', b'u'),
            ('01110110', b'v'),
            ('01110111', b'w'),
            ('01111000', b'x'),
            ('01111001', b'y'),
            ('01111010', b'z'),
            ('01111011', b'{'),
            ('01111100', b'|'),
            ('01111101', b'}'),
            ('01111110', b'~'),
            ('01111111', b'\x7f'),
            ('10000000', b'\x80'),
            ('10000001', b'\x81'),
            ('10000010', b'\x82'),
            ('10000011', b'\x83'),
            ('10000100', b'\x84'),
            ('10000101', b'\x85'),
            ('10000110', b'\x86'),
            ('10000111', b'\x87'),
            ('10001000', b'\x88'),
            ('10001001', b'\x89'),
            ('10001010', b'\x8a'),
            ('10001011', b'\x8b'),
            ('10001100', b'\x8c'),
            ('10001101', b'\x8d'),
            ('10001110', b'\x8e'),
            ('10001111', b'\x8f'),
            ('10010000', b'\x90'),
            ('10010001', b'\x91'),
            ('10010010', b'\x92'),
            ('10010011', b'\x93'),
            ('10010100', b'\x94'),
            ('10010101', b'\x95'),
            ('10010110', b'\x96'),
            ('10010111', b'\x97'),
            ('10011000', b'\x98'),
            ('10011001', b'\x99'),
            ('10011010', b'\x9a'),
            ('10011011', b'\x9b'),
            ('10011100', b'\x9c'),
            ('10011101', b'\x9d'),
            ('10011110', b'\x9e'),
            ('10011111', b'\x9f'),
            ('10100000', b'\xa0'),
            ('10100001', b'\xa1'),
            ('10100010', b'\xa2'),
            ('10100011', b'\xa3'),
            ('10100100', b'\xa4'),
            ('10100101', b'\xa5'),
            ('10100110', b'\xa6'),
            ('10100111', b'\xa7'),
            ('10101000', b'\xa8'),
            ('10101001', b'\xa9'),
            ('10101010', b'\xaa'),
            ('10101011', b'\xab'),
            ('10101100', b'\xac'),
            ('10101101', b'\xad'),
            ('10101110', b'\xae'),
            ('10101111', b'\xaf'),
            ('10110000', b'\xb0'),
            ('10110001', b'\xb1'),
            ('10110010', b'\xb2'),
            ('10110011', b'\xb3'),
            ('10110100', b'\xb4'),
            ('10110101', b'\xb5'),
            ('10110110', b'\xb6'),
            ('10110111', b'\xb7'),
            ('10111000', b'\xb8'),
            ('10111001', b'\xb9'),
            ('10111010', b'\xba'),
            ('10111011', b'\xbb'),
            ('10111100', b'\xbc'),
            ('10111101', b'\xbd'),
            ('10111110', b'\xbe'),
            ('10111111', b'\xbf'),
            ('11000000', b'\xc0'),
            ('11000001', b'\xc1'),
            ('11000010', b'\xc2'),
            ('11000011', b'\xc3'),
            ('11000100', b'\xc4'),
            ('11000101', b'\xc5'),
            ('11000110', b'\xc6'),
            ('11000111', b'\xc7'),
            ('11001000', b'\xc8'),
            ('11001001', b'\xc9'),
            ('11001010', b'\xca'),
            ('11001011', b'\xcb'),
            ('11001100', b'\xcc'),
            ('11001101', b'\xcd'),
            ('11001110', b'\xce'),
            ('11001111', b'\xcf'),
            ('11010000', b'\xd0'),
            ('11010001', b'\xd1'),
            ('11010010', b'\xd2'),
            ('11010011', b'\xd3'),
            ('11010100', b'\xd4'),
            ('11010101', b'\xd5'),
            ('11010110', b'\xd6'),
            ('11010111', b'\xd7'),
            ('11011000', b'\xd8'),
            ('11011001', b'\xd9'),
            ('11011010', b'\xda'),
            ('11011011', b'\xdb'),
            ('11011100', b'\xdc'),
            ('11011101', b'\xdd'),
            ('11011110', b'\xde'),
            ('11011111', b'\xdf'),
            ('11100000', b'\xe0'),
            ('11100001', b'\xe1'),
            ('11100010', b'\xe2'),
            ('11100011', b'\xe3'),
            ('11100100', b'\xe4'),
            ('11100101', b'\xe5'),
            ('11100110', b'\xe6'),
            ('11100111', b'\xe7'),
            ('11101000', b'\xe8'),
            ('11101001', b'\xe9'),
            ('11101010', b'\xea'),
            ('11101011', b'\xeb'),
            ('11101100', b'\xec'),
            ('11101101', b'\xed'),
            ('11101110', b'\xee'),
            ('11101111', b'\xef'),
            ('11110000', b'\xf0'),
            ('11110001', b'\xf1'),
            ('11110010', b'\xf2'),
            ('11110011', b'\xf3'),
            ('11110100', b'\xf4'),
            ('11110101', b'\xf5'),
            ('11110110', b'\xf6'),
            ('11110111', b'\xf7'),
            ('11111000', b'\xf8'),
            ('11111001', b'\xf9'),
            ('11111010', b'\xfa'),
            ('11111011', b'\xfb'),
            ('11111100', b'\xfc'),
            ('11111101', b'\xfd'),
            ('11111110', b'\xfe'),
            ('11111111', b'\xff'),
        )

        for bytes_string, byte_value in test_values:
            self.assertEqual(
                byte_value,
                self.test_object.binary_string_2_bytes(bytes_string)
            )
